/*
 * AlphaBot 2 API
 * API for interacting with an AlphaBot 2 RasPi
 *
 * OpenAPI spec version: 1.0.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Color} from './Color';

/**
 * The LEDState model module.
 * @module model/LEDState
 * @version 1.0.2
 */
export class LEDState {
  /**
   * Constructs a new <code>LEDState</code>.
   * State of an LED.
   * @alias module:model/LEDState
   * @class
   * @param color {module:model/Color} 
   * @param state {module:model/LEDState.StateEnum} 
   */
  constructor(color, state) {
    this.color = color;
    this.state = state;
  }

  /**
   * Constructs a <code>LEDState</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LEDState} obj Optional instance to populate.
   * @return {module:model/LEDState} The populated <code>LEDState</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new LEDState();
      if (data.hasOwnProperty('color'))
        obj.color = Color.constructFromObject(data['color']);
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:model/Color} color
 */
LEDState.prototype.color = undefined;

/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
LEDState.StateEnum = {
  /**
   * value: "shine"
   * @const
   */
  shine: "shine",

  /**
   * value: "blink"
   * @const
   */
  blink: "blink",

  /**
   * value: "off"
   * @const
   */
  off: "off"
};
/**
 * @member {module:model/LEDState.StateEnum} state
 */
LEDState.prototype.state = undefined;

